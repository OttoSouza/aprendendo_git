Comandos Git

	git init - inicializar um repositorio no git
	
	git status - saber se o status do codigo e ver as alteracoes estao atualizadas. (Relatorio)
	
	git add "nome do arquivo" - adicionar ao controle de versao (Nesse caso arquivo por arquivo)
	git add . - adiciona todos os arquivos que ainda nao foram para o controle de versao.
	
	git commit -m "descricao do commit" - usamos o commit para descrever o que ira ser adicionado nessa versao do commit.
	
	git push - Depois do git add para adicionar suas modificacoes dentro do controle de versionamento e o git commit -m para adicionar uma descricao a esse controle, usamos o git push para enviar todas as alteracoes adicionadas para o  git. Porem precisamos dizer para qual repositorio no github devemos enviar essas alteracoes para isso cria-se um repositorio no git e usa o comando abaixo
	
	git remote add origin "url_do_projeto" - define para onde o codigo sera enviado. feito isso voltamos ao comando anterior git push.
	No remote podemos usar a versao HTTPS ou SSH
	
	
	gi reflog - ver o nome dos commits feitos ate o momento (Historico)
	
	git reset --hard "nome do commit listado no comando anterior"
	
	
	Branch - caminhos diferentes no caminho de desenvolvimento
	git branch - ver todas as branchs 
	git branch "nome da branch" - criar uma nova branch
	git chechout "nome da branch"	- mudar de branch
	
	
	Depois de criar uma nova branch e adicionar novas informacoes vamos adicionar essas novas informacoes na branch principal. Para isso usamos o merge. 
	
	
	Primeiro: Ir para branch que ira receber as novas atualizacoes que seria a master
		git checkout master
	
	Segundo: Antes de fazer o merge (unir) atualize sua branch principal que seria a master nesse exemplo. Para isso use: 
		git pull.
	
	Terceiro: git push para enviar as alteracoes recebidas da branch temporario que esta unida coma principal e enviar para o repo.
	
	Adicionando qualquer coisa.
	
	
	
	
